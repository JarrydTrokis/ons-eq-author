// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentPickerSelect content types should render answer  1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Custom"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render answer and metadata 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Custom"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render destination 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Destination"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render metadata 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Metadata"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect content types should render question 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Question"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect metadata types should correctly filter by type 1`] = `
Object {
  "contentType": "Metadata",
  "data": Array [],
  "data-test": "picker",
  "isOpen": false,
  "onClose": [Function],
  "onSubmit": [Function],
  "singleItemSelect": true,
  "startingSelectedAnswers": Array [],
}
`;

exports[`ContentPickerSelect metadata types should correctly filter empty metadata 1`] = `
Object {
  "contentType": "Metadata",
  "data": Array [],
  "data-test": "picker",
  "isOpen": false,
  "onClose": [Function],
  "onSubmit": [Function],
  "singleItemSelect": true,
  "startingSelectedAnswers": Array [],
}
`;

exports[`ContentPickerSelect metadata types should correctly show all types when none specified 1`] = `
Object {
  "contentType": "Metadata",
  "data": Array [],
  "data-test": "picker",
  "isOpen": false,
  "onClose": [Function],
  "onSubmit": [Function],
  "singleItemSelect": true,
  "startingSelectedAnswers": Array [],
}
`;

exports[`ContentPickerSelect should disable select button correctly 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    disabled={true}
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Custom"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect should disable select button correctly 2`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    disabled={true}
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Custom"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;

exports[`ContentPickerSelect should render 1`] = `
<Fragment>
  <ContentPickerSelect__ContentSelectButton
    answerTypes={
      Array [
        "Number",
        "Currency",
      ]
    }
    data={
      Object {
        "questionnaire": Object {
          "id": "1",
          "metadata": Array [],
          "sections": Array [],
        },
      }
    }
    data-test="content-picker-select"
    match={
      Object {
        "params": Object {
          "questionnaireId": "1",
        },
      }
    }
    onClick={[Function]}
    onSubmit={[MockFunction]}
    type="button"
    variant="primary"
  >
    <ContentPickerSelect__ContentSelected>
      foobar
    </ContentPickerSelect__ContentSelected>
  </ContentPickerSelect__ContentSelectButton>
  <ContentPicker
    contentType="Custom"
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
    singleItemSelect={true}
    startingSelectedAnswers={Array []}
  />
</Fragment>
`;
