// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RuleEditor should render 1`] = `
<RuleEditor__Rule
  data-test="routing-rule"
>
  <RuleEditor__Header>
    <Label
      bold={true}
      inline={true}
    >
      Match
      <RuleEditor__SmallSelect
        defaultValue="all"
        disabled={true}
        id="match"
        name="match"
      >
        <option
          value="all"
        >
          All of
        </option>
        <option
          value="any"
        >
          Any of
        </option>
      </RuleEditor__SmallSelect>
      the following rules
    </Label>
    <RuleEditor__RemoveRuleButton
      data-test="btn-remove-rule"
      onClick={[Function]}
    >
      Remove rule
    </RuleEditor__RemoveRuleButton>
  </RuleEditor__Header>
  <RuleEditor__Expressions>
    <TransitionGroup
      childFactory={[Function]}
      component="div"
    >
      <Transition__RoutingComponentTransition
        key="1"
        timeout={200}
      >
        <Apollo(Apollo(Apollo(Apollo(Apollo(withRouter(UnwrappedBinaryExpressionEditor))))))
          canAddAndCondition={true}
          expression={
            Object {
              "id": "1",
              "left": Object {
                "id": "binaryExpressionId",
                "type": "Currency",
              },
            }
          }
          expressionGroupId="expressionGroupId"
          isLastExpression={true}
          isOnlyExpression={true}
          label="IF"
        />
      </Transition__RoutingComponentTransition>
    </TransitionGroup>
  </RuleEditor__Expressions>
  <withRouter(UnwrappedDestinationSelector)
    data-test="select-then"
    id="ruleId"
    label="THEN"
    onChange={[Function]}
    value={
      Object {
        "id": "1",
        "logical": null,
        "page": Object {
          "displayName": "Page",
          "id": "pageId",
        },
        "section": null,
      }
    }
  />
</RuleEditor__Rule>
`;
